(*
  This represents the Extended Backus-Naur Form (EBNF) implemented
  by this program. 

  It's was heavily inspired by Matthijs Groen's EBNF syntax from his
  ebnf2railroad project.
  
  See: https://github.com/matthijsgroen/ebnf2railroad
*)

grammar = { rule };

rule = lhs , "=" , rhs , ";";

lhs = identifier;

rhs = terminal
  | identifier
  | ( "(" , rhs , ")" ) (* group *)
  | ( "{" , rhs , "}" ) (* repetition *)
  | ( "[" , rhs , "]" ) (* optional *)
  | ( rhs , "|" , rhs ) (* choice *)
  | ( rhs , "," , rhs ) (* sequence *);

identifier = letter , { letter | digit | " " }, { letter | digit };

terminal = '"' , character , { character } , '"';

character = letter | digit | symbol | " " ;

letter =
    "A" | "B" | "C" | "D" | "E" | "F" | "G"
  | "H" | "I" | "J" | "K" | "L" | "M" | "N"
  | "O" | "P" | "Q" | "R" | "S" | "T" | "U"
  | "V" | "W" | "X" | "Y" | "Z" | "a" | "b"
  | "c" | "d" | "e" | "f" | "g" | "h" | "i"
  | "j" | "k" | "l" | "m" | "n" | "o" | "p"
  | "q" | "r" | "s" | "t" | "u" | "v" | "w"
  | "x" | "y" | "z" ;

digit = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;

symbol = "[" | "]" | "{" | "}" | "(" | ")" | "<" | ">"
  | "\'" | '\"' | "=" | "|" | "." | "," | ";" ;